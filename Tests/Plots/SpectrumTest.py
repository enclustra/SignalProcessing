########################################################################################################################
#  Copyright (c) 2020 by Oliver Br√ºndler, Switzerland
#  All rights reserved.
########################################################################################################################

########################################################################################################################
# Imports
########################################################################################################################
import numpy as np
import sys
from scipy import signal as sps
sys.path.append("../..")
from SignalProcessing.Plots.Spectrum import *


########################################################################################################################
# Setup
########################################################################################################################

F_SAMPLE = 100e6
F_SIG = 11.2e6
A_SIG = 1.0
SIG_IS_CPLX = True
PULSE_SAMPLES = 2048

#Create input signal and trigger events
t = np.arange(start=0, stop=PULSE_SAMPLES/F_SAMPLE,step=1/F_SAMPLE)
pulse = np.cos(2*np.pi*F_SIG*t)*A_SIG
if SIG_IS_CPLX:
    pulse = pulse + np.sin(2 * np.pi * F_SIG * t) * A_SIG * 1j

########################################################################################################################
# Run
########################################################################################################################
PlotSpectrum(pulse, F_SAMPLE, win=sps.windows.hanning, title="some title")